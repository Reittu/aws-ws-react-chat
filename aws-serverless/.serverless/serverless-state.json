{
  "service": {
    "service": "chat-api",
    "serviceObject": {
      "name": "chat-api"
    },
    "provider": {
      "stage": "dev",
      "variableSyntax": "\\${([^{}]+?)}",
      "name": "aws",
      "runtime": "nodejs12.x",
      "profile": "serverlessUser",
      "environment": {
        "tableName": "WebsocketUsers"
      },
      "iamRoleStatements": [
        {
          "Effect": "Allow",
          "Action": [
            "dynamodb:*"
          ],
          "Resource": "*"
        }
      ],
      "region": "us-east-1",
      "versionFunctions": true,
      "remoteFunctionData": null,
      "compiledCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketEncryption": {
                "ServerSideEncryptionConfiguration": [
                  {
                    "ServerSideEncryptionByDefault": {
                      "SSEAlgorithm": "AES256"
                    }
                  }
                ]
              }
            }
          },
          "ServerlessDeploymentBucketPolicy": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
              "Bucket": {
                "Ref": "ServerlessDeploymentBucket"
              },
              "PolicyDocument": {
                "Statement": [
                  {
                    "Action": "s3:*",
                    "Effect": "Deny",
                    "Principal": "*",
                    "Resource": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            },
                            "/*"
                          ]
                        ]
                      }
                    ],
                    "Condition": {
                      "Bool": {
                        "aws:SecureTransport": false
                      }
                    }
                  }
                ]
              }
            }
          },
          "WebsocketDashconnectLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/chat-api-dev-websocket-connect"
            }
          },
          "WebsocketDashdisconnectLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/chat-api-dev-websocket-disconnect"
            }
          },
          "WebsocketDashdefaultLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/chat-api-dev-websocket-default"
            }
          },
          "WebsocketDashmessageLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/chat-api-dev-websocket-message"
            }
          },
          "WebsocketDashstatusLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/chat-api-dev-websocket-status"
            }
          },
          "WebsocketDashnameUnderscorerequestLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/chat-api-dev-websocket-name_request"
            }
          },
          "IamRoleLambdaExecution": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": [
                        "lambda.amazonaws.com"
                      ]
                    },
                    "Action": [
                      "sts:AssumeRole"
                    ]
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": {
                    "Fn::Join": [
                      "-",
                      [
                        "chat-api-dev",
                        "lambda"
                      ]
                    ]
                  },
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:CreateLogStream",
                          "logs:CreateLogGroup"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/chat-api-dev*:*"
                          }
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:PutLogEvents"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/chat-api-dev*:*:*"
                          }
                        ]
                      },
                      {
                        "$ref": "$[\"service\"][\"provider\"][\"iamRoleStatements\"][0]"
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "execute-api:ManageConnections"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:execute-api:*:*:*/@connections/*"
                          }
                        ]
                      }
                    ]
                  }
                }
              ],
              "Path": "/",
              "RoleName": {
                "Fn::Join": [
                  "-",
                  [
                    "chat-api-dev",
                    {
                      "Ref": "AWS::Region"
                    },
                    "lambdaRole"
                  ]
                ]
              }
            }
          },
          "EnterpriseLogAccessIamRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "AWS": "arn:aws:iam::802587217904:root"
                    },
                    "Action": "sts:AssumeRole",
                    "Condition": {
                      "StringEquals": {
                        "sts:ExternalId": "ServerlessEnterprise-HLxkwNq5lbf6SnK1Mc"
                      }
                    }
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": "LogFilterAccess",
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:FilterLogEvents"
                        ],
                        "Resource": [
                          {
                            "Fn::GetAtt": [
                              "WebsocketDashconnectLogGroup",
                              "Arn"
                            ]
                          },
                          {
                            "Fn::GetAtt": [
                              "WebsocketDashdisconnectLogGroup",
                              "Arn"
                            ]
                          },
                          {
                            "Fn::GetAtt": [
                              "WebsocketDashdefaultLogGroup",
                              "Arn"
                            ]
                          },
                          {
                            "Fn::GetAtt": [
                              "WebsocketDashmessageLogGroup",
                              "Arn"
                            ]
                          },
                          {
                            "Fn::GetAtt": [
                              "WebsocketDashstatusLogGroup",
                              "Arn"
                            ]
                          },
                          {
                            "Fn::GetAtt": [
                              "WebsocketDashnameUnderscorerequestLogGroup",
                              "Arn"
                            ]
                          }
                        ]
                      }
                    ]
                  }
                }
              ]
            }
          },
          "WebsocketDashconnectLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/chat-api/dev/1584983378089-2020-03-23T17:09:38.089Z/chat-api.zip"
              },
              "FunctionName": "chat-api-dev-websocket-connect",
              "Handler": "s_websocket_connect.handler",
              "MemorySize": 1024,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Runtime": "nodejs12.x",
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "tableName": "WebsocketUsers"
                }
              }
            },
            "DependsOn": [
              "WebsocketDashconnectLogGroup",
              "IamRoleLambdaExecution"
            ]
          },
          "WebsocketDashconnectLambdaVersionJWElQwK7FJloHCvGDiJ1UzFdR560pvKoUVGCmuZFJk": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "WebsocketDashconnectLambdaFunction"
              },
              "CodeSha256": "nOFuiVI843Xiwkjs85hGdPtrBVO0zg8FRfdPMm5m3GI="
            }
          },
          "WebsocketDashdisconnectLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/chat-api/dev/1584983378089-2020-03-23T17:09:38.089Z/chat-api.zip"
              },
              "FunctionName": "chat-api-dev-websocket-disconnect",
              "Handler": "s_websocket_disconnect.handler",
              "MemorySize": 1024,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Runtime": "nodejs12.x",
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "tableName": "WebsocketUsers"
                }
              }
            },
            "DependsOn": [
              "WebsocketDashdisconnectLogGroup",
              "IamRoleLambdaExecution"
            ]
          },
          "WebsocketDashdisconnectLambdaVersionSJLOGimqQ6ftpli0csRaRd7QCLqpll6bVIOn9Ep4cA": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "WebsocketDashdisconnectLambdaFunction"
              },
              "CodeSha256": "nOFuiVI843Xiwkjs85hGdPtrBVO0zg8FRfdPMm5m3GI="
            }
          },
          "WebsocketDashdefaultLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/chat-api/dev/1584983378089-2020-03-23T17:09:38.089Z/chat-api.zip"
              },
              "FunctionName": "chat-api-dev-websocket-default",
              "Handler": "s_websocket_default.handler",
              "MemorySize": 1024,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Runtime": "nodejs12.x",
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "tableName": "WebsocketUsers"
                }
              }
            },
            "DependsOn": [
              "WebsocketDashdefaultLogGroup",
              "IamRoleLambdaExecution"
            ]
          },
          "WebsocketDashdefaultLambdaVersionS7gcZpvm88m7DOOuTz7LsPQKrukrrm7qApFxhcCCQ": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "WebsocketDashdefaultLambdaFunction"
              },
              "CodeSha256": "nOFuiVI843Xiwkjs85hGdPtrBVO0zg8FRfdPMm5m3GI="
            }
          },
          "WebsocketDashmessageLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/chat-api/dev/1584983378089-2020-03-23T17:09:38.089Z/chat-api.zip"
              },
              "FunctionName": "chat-api-dev-websocket-message",
              "Handler": "s_websocket_message.handler",
              "MemorySize": 1024,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Runtime": "nodejs12.x",
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "tableName": "WebsocketUsers"
                }
              }
            },
            "DependsOn": [
              "WebsocketDashmessageLogGroup",
              "IamRoleLambdaExecution"
            ]
          },
          "WebsocketDashmessageLambdaVersionH99lNo1B8HoSi5aq4gip2fPX7smF7heG9mwb4ZnNDE": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "WebsocketDashmessageLambdaFunction"
              },
              "CodeSha256": "nOFuiVI843Xiwkjs85hGdPtrBVO0zg8FRfdPMm5m3GI="
            }
          },
          "WebsocketDashstatusLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/chat-api/dev/1584983378089-2020-03-23T17:09:38.089Z/chat-api.zip"
              },
              "FunctionName": "chat-api-dev-websocket-status",
              "Handler": "s_websocket_status.handler",
              "MemorySize": 1024,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Runtime": "nodejs12.x",
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "tableName": "WebsocketUsers"
                }
              }
            },
            "DependsOn": [
              "WebsocketDashstatusLogGroup",
              "IamRoleLambdaExecution"
            ]
          },
          "WebsocketDashstatusLambdaVersionJSDeqdw2Z9YeFpK1et9CXq0PyZ9RUtZ5fajgsWSYY84": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "WebsocketDashstatusLambdaFunction"
              },
              "CodeSha256": "nOFuiVI843Xiwkjs85hGdPtrBVO0zg8FRfdPMm5m3GI="
            }
          },
          "WebsocketDashnameUnderscorerequestLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/chat-api/dev/1584983378089-2020-03-23T17:09:38.089Z/chat-api.zip"
              },
              "FunctionName": "chat-api-dev-websocket-name_request",
              "Handler": "s_websocket_name_request.handler",
              "MemorySize": 1024,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Runtime": "nodejs12.x",
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "tableName": "WebsocketUsers"
                }
              }
            },
            "DependsOn": [
              "WebsocketDashnameUnderscorerequestLogGroup",
              "IamRoleLambdaExecution"
            ]
          },
          "WebsocketDashnameUnderscorerequestLambdaVersion7RBcFNTZcD679jkVBaTZltQku2UXyFq2Cyc4FJyZFeY": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "WebsocketDashnameUnderscorerequestLambdaFunction"
              },
              "CodeSha256": "nOFuiVI843Xiwkjs85hGdPtrBVO0zg8FRfdPMm5m3GI="
            }
          },
          "WebsocketsApi": {
            "Type": "AWS::ApiGatewayV2::Api",
            "Properties": {
              "Name": "dev-chat-api-websockets",
              "RouteSelectionExpression": "$request.body.action",
              "Description": "Serverless Websockets",
              "ProtocolType": "WEBSOCKET"
            }
          },
          "WebsocketDashconnectWebsocketsIntegration": {
            "Type": "AWS::ApiGatewayV2::Integration",
            "Properties": {
              "ApiId": {
                "Ref": "WebsocketsApi"
              },
              "IntegrationType": "AWS_PROXY",
              "IntegrationUri": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":apigateway:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":lambda:path/2015-03-31/functions/",
                    {
                      "Fn::GetAtt": [
                        "WebsocketDashconnectLambdaFunction",
                        "Arn"
                      ]
                    },
                    "/invocations"
                  ]
                ]
              }
            }
          },
          "WebsocketDashdisconnectWebsocketsIntegration": {
            "Type": "AWS::ApiGatewayV2::Integration",
            "Properties": {
              "ApiId": {
                "Ref": "WebsocketsApi"
              },
              "IntegrationType": "AWS_PROXY",
              "IntegrationUri": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":apigateway:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":lambda:path/2015-03-31/functions/",
                    {
                      "Fn::GetAtt": [
                        "WebsocketDashdisconnectLambdaFunction",
                        "Arn"
                      ]
                    },
                    "/invocations"
                  ]
                ]
              }
            }
          },
          "WebsocketDashdefaultWebsocketsIntegration": {
            "Type": "AWS::ApiGatewayV2::Integration",
            "Properties": {
              "ApiId": {
                "Ref": "WebsocketsApi"
              },
              "IntegrationType": "AWS_PROXY",
              "IntegrationUri": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":apigateway:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":lambda:path/2015-03-31/functions/",
                    {
                      "Fn::GetAtt": [
                        "WebsocketDashdefaultLambdaFunction",
                        "Arn"
                      ]
                    },
                    "/invocations"
                  ]
                ]
              }
            }
          },
          "WebsocketDashmessageWebsocketsIntegration": {
            "Type": "AWS::ApiGatewayV2::Integration",
            "Properties": {
              "ApiId": {
                "Ref": "WebsocketsApi"
              },
              "IntegrationType": "AWS_PROXY",
              "IntegrationUri": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":apigateway:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":lambda:path/2015-03-31/functions/",
                    {
                      "Fn::GetAtt": [
                        "WebsocketDashmessageLambdaFunction",
                        "Arn"
                      ]
                    },
                    "/invocations"
                  ]
                ]
              }
            }
          },
          "WebsocketDashstatusWebsocketsIntegration": {
            "Type": "AWS::ApiGatewayV2::Integration",
            "Properties": {
              "ApiId": {
                "Ref": "WebsocketsApi"
              },
              "IntegrationType": "AWS_PROXY",
              "IntegrationUri": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":apigateway:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":lambda:path/2015-03-31/functions/",
                    {
                      "Fn::GetAtt": [
                        "WebsocketDashstatusLambdaFunction",
                        "Arn"
                      ]
                    },
                    "/invocations"
                  ]
                ]
              }
            }
          },
          "WebsocketDashnameUnderscorerequestWebsocketsIntegration": {
            "Type": "AWS::ApiGatewayV2::Integration",
            "Properties": {
              "ApiId": {
                "Ref": "WebsocketsApi"
              },
              "IntegrationType": "AWS_PROXY",
              "IntegrationUri": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":apigateway:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":lambda:path/2015-03-31/functions/",
                    {
                      "Fn::GetAtt": [
                        "WebsocketDashnameUnderscorerequestLambdaFunction",
                        "Arn"
                      ]
                    },
                    "/invocations"
                  ]
                ]
              }
            }
          },
          "WebsocketDashconnectLambdaPermissionWebsockets": {
            "Type": "AWS::Lambda::Permission",
            "DependsOn": [
              "WebsocketsApi",
              "WebsocketDashconnectLambdaFunction"
            ],
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "WebsocketDashconnectLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com"
            }
          },
          "WebsocketDashdisconnectLambdaPermissionWebsockets": {
            "Type": "AWS::Lambda::Permission",
            "DependsOn": [
              "WebsocketsApi",
              "WebsocketDashdisconnectLambdaFunction"
            ],
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "WebsocketDashdisconnectLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com"
            }
          },
          "WebsocketDashdefaultLambdaPermissionWebsockets": {
            "Type": "AWS::Lambda::Permission",
            "DependsOn": [
              "WebsocketsApi",
              "WebsocketDashdefaultLambdaFunction"
            ],
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "WebsocketDashdefaultLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com"
            }
          },
          "WebsocketDashmessageLambdaPermissionWebsockets": {
            "Type": "AWS::Lambda::Permission",
            "DependsOn": [
              "WebsocketsApi",
              "WebsocketDashmessageLambdaFunction"
            ],
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "WebsocketDashmessageLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com"
            }
          },
          "WebsocketDashstatusLambdaPermissionWebsockets": {
            "Type": "AWS::Lambda::Permission",
            "DependsOn": [
              "WebsocketsApi",
              "WebsocketDashstatusLambdaFunction"
            ],
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "WebsocketDashstatusLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com"
            }
          },
          "WebsocketDashnameUnderscorerequestLambdaPermissionWebsockets": {
            "Type": "AWS::Lambda::Permission",
            "DependsOn": [
              "WebsocketsApi",
              "WebsocketDashnameUnderscorerequestLambdaFunction"
            ],
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "WebsocketDashnameUnderscorerequestLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com"
            }
          },
          "SconnectWebsocketsRoute": {
            "Type": "AWS::ApiGatewayV2::Route",
            "Properties": {
              "ApiId": {
                "Ref": "WebsocketsApi"
              },
              "RouteKey": "$connect",
              "AuthorizationType": "NONE",
              "Target": {
                "Fn::Join": [
                  "/",
                  [
                    "integrations",
                    {
                      "Ref": "WebsocketDashconnectWebsocketsIntegration"
                    }
                  ]
                ]
              }
            }
          },
          "SdisconnectWebsocketsRoute": {
            "Type": "AWS::ApiGatewayV2::Route",
            "Properties": {
              "ApiId": {
                "Ref": "WebsocketsApi"
              },
              "RouteKey": "$disconnect",
              "AuthorizationType": "NONE",
              "Target": {
                "Fn::Join": [
                  "/",
                  [
                    "integrations",
                    {
                      "Ref": "WebsocketDashdisconnectWebsocketsIntegration"
                    }
                  ]
                ]
              }
            }
          },
          "SdefaultWebsocketsRoute": {
            "Type": "AWS::ApiGatewayV2::Route",
            "Properties": {
              "ApiId": {
                "Ref": "WebsocketsApi"
              },
              "RouteKey": "$default",
              "AuthorizationType": "NONE",
              "Target": {
                "Fn::Join": [
                  "/",
                  [
                    "integrations",
                    {
                      "Ref": "WebsocketDashdefaultWebsocketsIntegration"
                    }
                  ]
                ]
              }
            }
          },
          "messageWebsocketsRoute": {
            "Type": "AWS::ApiGatewayV2::Route",
            "Properties": {
              "ApiId": {
                "Ref": "WebsocketsApi"
              },
              "RouteKey": "message",
              "AuthorizationType": "NONE",
              "Target": {
                "Fn::Join": [
                  "/",
                  [
                    "integrations",
                    {
                      "Ref": "WebsocketDashmessageWebsocketsIntegration"
                    }
                  ]
                ]
              }
            }
          },
          "statusWebsocketsRoute": {
            "Type": "AWS::ApiGatewayV2::Route",
            "Properties": {
              "ApiId": {
                "Ref": "WebsocketsApi"
              },
              "RouteKey": "status",
              "AuthorizationType": "NONE",
              "Target": {
                "Fn::Join": [
                  "/",
                  [
                    "integrations",
                    {
                      "Ref": "WebsocketDashstatusWebsocketsIntegration"
                    }
                  ]
                ]
              }
            }
          },
          "nameUnderscorerequestWebsocketsRoute": {
            "Type": "AWS::ApiGatewayV2::Route",
            "Properties": {
              "ApiId": {
                "Ref": "WebsocketsApi"
              },
              "RouteKey": "name_request",
              "AuthorizationType": "NONE",
              "Target": {
                "Fn::Join": [
                  "/",
                  [
                    "integrations",
                    {
                      "Ref": "WebsocketDashnameUnderscorerequestWebsocketsIntegration"
                    }
                  ]
                ]
              }
            }
          },
          "WebsocketsDeploymentStage": {
            "Type": "AWS::ApiGatewayV2::Stage",
            "Properties": {
              "ApiId": {
                "Ref": "WebsocketsApi"
              },
              "StageName": "dev",
              "Description": "Serverless Websockets",
              "DeploymentId": {
                "Ref": "WebsocketsDeploymentE4pNWbHRpKZHTxWySgdGfLxa5Jbwa6ieLOSP2YxMME"
              }
            }
          },
          "WebsocketsDeploymentE4pNWbHRpKZHTxWySgdGfLxa5Jbwa6ieLOSP2YxMME": {
            "Type": "AWS::ApiGatewayV2::Deployment",
            "DependsOn": [
              "SconnectWebsocketsRoute",
              "SdisconnectWebsocketsRoute",
              "SdefaultWebsocketsRoute",
              "messageWebsocketsRoute",
              "statusWebsocketsRoute",
              "nameUnderscorerequestWebsocketsRoute"
            ],
            "Properties": {
              "ApiId": {
                "Ref": "WebsocketsApi"
              },
              "Description": "Serverless Websockets"
            }
          },
          "WebsocketUserTable": {
            "Type": "AWS::DynamoDB::Table",
            "Properties": {
              "TableName": "WebsocketUsers",
              "AttributeDefinitions": [
                {
                  "AttributeName": "ID",
                  "AttributeType": "S"
                }
              ],
              "KeySchema": [
                {
                  "AttributeName": "ID",
                  "KeyType": "HASH"
                }
              ],
              "BillingMode": "PAY_PER_REQUEST"
            }
          },
          "CloudWatchLogsSubscriptionFilterWebsocketDashconnectLogGroup": {
            "Type": "AWS::Logs::SubscriptionFilter",
            "Properties": {
              "DestinationArn": "arn:aws:logs:us-east-1:802587217904:destination:HLxkwNq5lbf6SnK1Mc#H0xwVqDsMQMMlCxwhS#chat-api#dev",
              "FilterPattern": "?\"REPORT RequestId: \" ?\"SERVERLESS_ENTERPRISE\"",
              "LogGroupName": {
                "Ref": "WebsocketDashconnectLogGroup"
              }
            }
          },
          "CloudWatchLogsSubscriptionFilterWebsocketDashdisconnectLogGroup": {
            "Type": "AWS::Logs::SubscriptionFilter",
            "Properties": {
              "DestinationArn": "arn:aws:logs:us-east-1:802587217904:destination:HLxkwNq5lbf6SnK1Mc#H0xwVqDsMQMMlCxwhS#chat-api#dev",
              "FilterPattern": "?\"REPORT RequestId: \" ?\"SERVERLESS_ENTERPRISE\"",
              "LogGroupName": {
                "Ref": "WebsocketDashdisconnectLogGroup"
              }
            }
          },
          "CloudWatchLogsSubscriptionFilterWebsocketDashdefaultLogGroup": {
            "Type": "AWS::Logs::SubscriptionFilter",
            "Properties": {
              "DestinationArn": "arn:aws:logs:us-east-1:802587217904:destination:HLxkwNq5lbf6SnK1Mc#H0xwVqDsMQMMlCxwhS#chat-api#dev",
              "FilterPattern": "?\"REPORT RequestId: \" ?\"SERVERLESS_ENTERPRISE\"",
              "LogGroupName": {
                "Ref": "WebsocketDashdefaultLogGroup"
              }
            }
          },
          "CloudWatchLogsSubscriptionFilterWebsocketDashmessageLogGroup": {
            "Type": "AWS::Logs::SubscriptionFilter",
            "Properties": {
              "DestinationArn": "arn:aws:logs:us-east-1:802587217904:destination:HLxkwNq5lbf6SnK1Mc#H0xwVqDsMQMMlCxwhS#chat-api#dev",
              "FilterPattern": "?\"REPORT RequestId: \" ?\"SERVERLESS_ENTERPRISE\"",
              "LogGroupName": {
                "Ref": "WebsocketDashmessageLogGroup"
              }
            }
          },
          "CloudWatchLogsSubscriptionFilterWebsocketDashstatusLogGroup": {
            "Type": "AWS::Logs::SubscriptionFilter",
            "Properties": {
              "DestinationArn": "arn:aws:logs:us-east-1:802587217904:destination:HLxkwNq5lbf6SnK1Mc#H0xwVqDsMQMMlCxwhS#chat-api#dev",
              "FilterPattern": "?\"REPORT RequestId: \" ?\"SERVERLESS_ENTERPRISE\"",
              "LogGroupName": {
                "Ref": "WebsocketDashstatusLogGroup"
              }
            }
          },
          "CloudWatchLogsSubscriptionFilterWebsocketDashnameUnderscorerequestLogGroup": {
            "Type": "AWS::Logs::SubscriptionFilter",
            "Properties": {
              "DestinationArn": "arn:aws:logs:us-east-1:802587217904:destination:HLxkwNq5lbf6SnK1Mc#H0xwVqDsMQMMlCxwhS#chat-api#dev",
              "FilterPattern": "?\"REPORT RequestId: \" ?\"SERVERLESS_ENTERPRISE\"",
              "LogGroupName": {
                "Ref": "WebsocketDashnameUnderscorerequestLogGroup"
              }
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            }
          },
          "EnterpriseLogAccessIamRole": {
            "Value": {
              "Fn::GetAtt": [
                "EnterpriseLogAccessIamRole",
                "Arn"
              ]
            }
          },
          "WebsocketDashconnectLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "WebsocketDashconnectLambdaVersionJWElQwK7FJloHCvGDiJ1UzFdR560pvKoUVGCmuZFJk"
            }
          },
          "WebsocketDashdisconnectLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "WebsocketDashdisconnectLambdaVersionSJLOGimqQ6ftpli0csRaRd7QCLqpll6bVIOn9Ep4cA"
            }
          },
          "WebsocketDashdefaultLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "WebsocketDashdefaultLambdaVersionS7gcZpvm88m7DOOuTz7LsPQKrukrrm7qApFxhcCCQ"
            }
          },
          "WebsocketDashmessageLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "WebsocketDashmessageLambdaVersionH99lNo1B8HoSi5aq4gip2fPX7smF7heG9mwb4ZnNDE"
            }
          },
          "WebsocketDashstatusLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "WebsocketDashstatusLambdaVersionJSDeqdw2Z9YeFpK1et9CXq0PyZ9RUtZ5fajgsWSYY84"
            }
          },
          "WebsocketDashnameUnderscorerequestLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "WebsocketDashnameUnderscorerequestLambdaVersion7RBcFNTZcD679jkVBaTZltQku2UXyFq2Cyc4FJyZFeY"
            }
          },
          "ServiceEndpointWebsocket": {
            "Description": "URL of the service endpoint",
            "Value": {
              "Fn::Join": [
                "",
                [
                  "wss://",
                  {
                    "Ref": "WebsocketsApi"
                  },
                  ".execute-api.",
                  {
                    "Ref": "AWS::Region"
                  },
                  ".",
                  {
                    "Ref": "AWS::URLSuffix"
                  },
                  "/dev"
                ]
              ]
            }
          }
        }
      },
      "coreCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketEncryption": {
                "ServerSideEncryptionConfiguration": [
                  {
                    "ServerSideEncryptionByDefault": {
                      "SSEAlgorithm": "AES256"
                    }
                  }
                ]
              }
            }
          },
          "ServerlessDeploymentBucketPolicy": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
              "Bucket": {
                "Ref": "ServerlessDeploymentBucket"
              },
              "PolicyDocument": {
                "Statement": [
                  {
                    "Action": "s3:*",
                    "Effect": "Deny",
                    "Principal": "*",
                    "Resource": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            },
                            "/*"
                          ]
                        ]
                      }
                    ],
                    "Condition": {
                      "Bool": {
                        "aws:SecureTransport": false
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            }
          }
        }
      },
      "logs": {
        "restApi": {
          "format": "{\"requestTime\":\"$context.requestTime\",\"requestId\":\"$context.requestId\",\"apiId\":\"$context.apiId\",\"resourceId\":\"$context.resourceId\",\"resourcePath\":\"$context.resourcePath\",\"path\":\"$context.path\",\"httpMethod\":\"$context.httpMethod\",\"status\":\"$context.status\",\"authLatency\":\"$context.authorizer.integrationLatency\",\"integrationLatency\":\"$context.integrationLatency\",\"integrationStatus\":\"$context.integrationStatus\",\"responseLatency\":\"$context.responseLatency\",\"responseLength\":\"$context.responseLength\",\"errorMessage\":\"$context.error.message\",\"format\":\"SLS_ACCESS_LOG\",\"version\":\"1.0.0\"}"
        }
      },
      "vpc": {}
    },
    "custom": {
      "tableName": "WebsocketUsers"
    },
    "pluginsData": {},
    "functions": {
      "websocket-connect": {
        "handler": "s_websocket_connect.handler",
        "events": [
          {
            "websocket": {
              "route": "$connect"
            }
          }
        ],
        "name": "chat-api-dev-websocket-connect",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs12.x",
        "vpc": {},
        "versionLogicalId": "WebsocketDashconnectLambdaVersionJWElQwK7FJloHCvGDiJ1UzFdR560pvKoUVGCmuZFJk"
      },
      "websocket-disconnect": {
        "handler": "s_websocket_disconnect.handler",
        "events": [
          {
            "websocket": {
              "route": "$disconnect"
            }
          }
        ],
        "name": "chat-api-dev-websocket-disconnect",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs12.x",
        "vpc": {},
        "versionLogicalId": "WebsocketDashdisconnectLambdaVersionSJLOGimqQ6ftpli0csRaRd7QCLqpll6bVIOn9Ep4cA"
      },
      "websocket-default": {
        "handler": "s_websocket_default.handler",
        "events": [
          {
            "websocket": {
              "route": "$default"
            }
          }
        ],
        "name": "chat-api-dev-websocket-default",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs12.x",
        "vpc": {},
        "versionLogicalId": "WebsocketDashdefaultLambdaVersionS7gcZpvm88m7DOOuTz7LsPQKrukrrm7qApFxhcCCQ"
      },
      "websocket-message": {
        "handler": "s_websocket_message.handler",
        "events": [
          {
            "websocket": {
              "route": "message"
            }
          }
        ],
        "name": "chat-api-dev-websocket-message",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs12.x",
        "vpc": {},
        "versionLogicalId": "WebsocketDashmessageLambdaVersionH99lNo1B8HoSi5aq4gip2fPX7smF7heG9mwb4ZnNDE"
      },
      "websocket-status": {
        "handler": "s_websocket_status.handler",
        "events": [
          {
            "websocket": {
              "route": "status"
            }
          }
        ],
        "name": "chat-api-dev-websocket-status",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs12.x",
        "vpc": {},
        "versionLogicalId": "WebsocketDashstatusLambdaVersionJSDeqdw2Z9YeFpK1et9CXq0PyZ9RUtZ5fajgsWSYY84"
      },
      "websocket-name_request": {
        "handler": "s_websocket_name_request.handler",
        "events": [
          {
            "websocket": {
              "route": "name_request"
            }
          }
        ],
        "name": "chat-api-dev-websocket-name_request",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs12.x",
        "vpc": {},
        "versionLogicalId": "WebsocketDashnameUnderscorerequestLambdaVersion7RBcFNTZcD679jkVBaTZltQku2UXyFq2Cyc4FJyZFeY"
      }
    },
    "resources": {
      "Resources": {
        "WebsocketUserTable": {
          "Type": "AWS::DynamoDB::Table",
          "Properties": {
            "TableName": "WebsocketUsers",
            "AttributeDefinitions": [
              {
                "AttributeName": "ID",
                "AttributeType": "S"
              }
            ],
            "KeySchema": [
              {
                "AttributeName": "ID",
                "KeyType": "HASH"
              }
            ],
            "BillingMode": "PAY_PER_REQUEST"
          }
        }
      },
      "Outputs": {}
    },
    "serviceFilename": "serverless.yml",
    "app": "my-first-app",
    "org": "reittu",
    "layers": {},
    "isDashboardMonitoringPreconfigured": true,
    "isDashboardAppPreconfigured": true,
    "appUid": "H0xwVqDsMQMMlCxwhS",
    "orgUid": "HLxkwNq5lbf6SnK1Mc",
    "artifact": "C:\\Users\\Tony'\\Documents\\GitHub\\aws-ws-react-chat\\aws-serverless\\.serverless\\chat-api.zip"
  },
  "package": {
    "artifactDirectoryName": "serverless/chat-api/dev/1584983378089-2020-03-23T17:09:38.089Z",
    "artifact": "chat-api.zip"
  }
}